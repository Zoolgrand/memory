{"ast":null,"code":"var _jsxFileName = \"/home/krav4uk/projects/memory/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => {\n      return Math.random() - 0.5;\n    }).map(item => ({ ...item,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(turns => turns + 1);\n    setDisabled(false);\n  };\n\n  useEffect(() => {\n    setDisabled(true);\n\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prev => {\n          return prev.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WWe0fUXumRKyACXDD8rBflBzdbo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/krav4uk/projects/memory/src/App.js"],"names":["useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","item","id","handleChoice","card","resetTurn","src","prev","setTimeout"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched: false },\n  { \"src\": \"/img/potion-1.png\", matched: false },\n  { \"src\": \"/img/ring-1.png\", matched: false },\n  { \"src\": \"/img/scroll-1.png\", matched: false },\n  { \"src\": \"/img/shield-1.png\", matched: false },\n  { \"src\": \"/img/sword-1.png\", matched: false },\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => {\n      return Math.random() - 0.5\n    }).map((item) => ({ ...item, id: Math.random() }))\n\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(turns => turns + 1)\n    setDisabled(false)\n  }\n\n  useEffect(() => {\n    setDisabled(true)\n    if (choiceOne && choiceTwo) {\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prev => {\n          return prev.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n\n    }\n\n  }, [choiceOne, choiceTwo])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards} >New Game</button>\n\n      <div className='card-grid'>\n        {cards.map((card) =>\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}